<?php

/**
 * @file
 * Install, update and uninstall functions for the virgin region module.
 */

/**
 * Manually rebuilds virgin region fields
 */
function virgin_region_update_7001() {
  module_load_include('inc', 'features', 'features.export');
  module_load_include('inc', 'features', 'includes/features.field');
  field_base_features_rebuild('virgin_base');
  field_instance_features_rebuild('virgin_region');
}

/**
 * Seed the VIRGIN_REGION_VARIABLE_GEO variable
 */
function virgin_region_update_7002() {
  $regions = array();

  $q = new EntityFieldQuery();

  $results = $q
    ->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'region')
    ->propertyCondition('status', NODE_PUBLISHED)
    ->execute()
  ;

  if (!empty($results['node'])) {
    foreach ($results['node'] as $node) {
      $node_wrapper = entity_metadata_wrapper('node', $node->nid);
      $regions[$node_wrapper->field_country_letter_code->value()] = $node_wrapper->field_hostname->value();
    }
  }
  variable_set(VIRGIN_REGION_VARIABLE_GEO_MAPPING, $regions);
}

/**
 * Enables the acquia_geoip_vary_by_country module
 */
function virgin_region_update_7003() {
  module_enable(array('acquia_geoip_vary_by_country'));
}

/**
 * Clean the variable as we now are using the field_geo_country_code to map
 * the region code
 */
function virgin_region_update_7004() {
  variable_set(VIRGIN_REGION_VARIABLE_GEO_MAPPING, array());
}

