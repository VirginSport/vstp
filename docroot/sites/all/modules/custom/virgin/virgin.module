<?php

/**
 * @file
 * Main file for virgin module.
 */

/**
 * Implements hook_menu().
 */
function virgin_menu() {
  $items = array();

  $items['admin/config/virgin'] = array(
    'title' => 'Virgin Sport',
    'description' => 'Configure virgin sport website.',
    'position' => 'left',
    'weight' => -30,
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('access administration pages'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );

  $items['admin/config/virgin/social-networks'] = array(
    'title' => 'Social Networks',
    'description' => 'Social networks configuration for the Virgin Sport website.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('virgin_admin_social_networks_settings'),
    'access arguments' => array('access administration pages'),
    'file' => 'virgin.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_boot().
 */
function virgin_boot() {

  // Provides a more graceful exception handler than what Drupal core provides.
  set_exception_handler('_virgin_exception_handler');
}

/**
 * Implements hook_theme().
 */
function virgin_theme($existing, $type, $theme, $path) {
  $base = array(
    'file' => 'theme.inc',
    'path' => $path . '/theme',
  );

  return array();
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function virgin_ctools_plugin_directory($module, $plugin) {
  if (in_array($module, array('panelizer', 'ctools', 'page_manager'))) {
    return 'plugins/' . $plugin;
  }
}

/**
 * Implements hook_themes_enabled().
 */
function virgin_themes_enabled($theme_list) {

  // Lightning distribution automatically enables lightningdemo theme at
  // install time. Disable the theme and force virginsport theme enabled.
  // @see lightning_install()
  if (in_array('lightningdemo', $theme_list)) {
    variable_set('theme_default', 'virginsport');
    theme_enable(array('virginsport'));
    theme_disable(array('lightningdemo'));
  }
}

/**
 * Implements hook_scald_extra_modes().
 */
function virgin_scald_extra_modes() {
  return array(
    'virgin_full' => array(
      'title' => t('Full'),
      'formats'    => array(),
    ),
  );
}

// Helpers
// -----------------------------------------------------------------------------

/**
 * Get the list of available social networks for Virgin Sport.
 *
 * @return array
 *  An array of social network names keyed by identifier.
 */
function virgin_social_networks() {
  return array(
    'facebook' => 'Facebook',
    'google' => 'Google',
    'instagram' => 'Instagram',
    'linkedin' => 'LinkedIn',
    'pinterest' => 'Pinterest',
    'tumbler' => 'Tumbler',
    'twitter' => 'Twitter',
    'youtube' => 'Youtube',
  );
}

/**
 * Form API e-mail validation callback
 */
function virgin_element_email_validate($element, &$form_state, $form) {
  if (!valid_email_address($element['#value'])) {
    form_error($element, t('The e-mail address you inserted is not valid.'));
  }
}

/**
 * Provides a custom PHP exception handler for Virgin Sports
 *
 * Uncaught exceptions are those not enclosed in a try/catch block. They are
 * always fatal: the execution of the script will stop as soon as the exception
 * handler exits.
 *
 * @param $exception
 *   The exception object that was thrown.
 *
 * @see virgin_boot().
 */
function _virgin_exception_handler($exception) {

  // If it's an unhandled VirginException, attempt to handle it "gracefully".
  if ($exception instanceof VirginException) {
    if ($exception->hasUserMessage()) {
      drupal_set_message($exception->getUserMessage(), 'error');
    }

    // If redirect path configured send user to it, otherwise send 500 error
    if ($exception->getRedirectPath()) {
      // Redirect to configured path
      drupal_goto($exception->getRedirectPath());
    } else {
      drupal_goto('<front>');
    }
  }
  else {
    // Otherwise fallback to Drupal core behavior.
    _drupal_exception_handler($exception);
  }
}
