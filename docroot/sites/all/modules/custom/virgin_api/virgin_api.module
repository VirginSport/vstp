<?php
/**
 * @file
 * Code for the Virgin API feature.
 */

include_once 'virgin_api.features.inc';

/**
 * Implements hook_services_resources().
 */
function virgin_api_services_resources() {
  $resources = array();

  // Standing as a placeholder for future API endpoints

  return $resources;
}

/**
 * Implements hook_observer_info().
 */
function virgin_api_observer_info() {
  return array(
    new VirginApiSugarEventListener(),
  );
}

/**
 * Implements hook_node_update().
 */
function virgin_api_node_update($node) {
  if ($node->type == 'event') {
    observer_notify('drupal:event:update', $node);
  }
}

// Helpers
// -----------------------------------------------------------------------------

/**
 * Token access callback
 *
 * Validates if the request carries a valid access token.
 *
 * @return bool
 *  TRUE the access is valid, FALSE otherwise.
 */
function virgin_api_token_access() {
  $token = empty($_GET['token']) ? FALSE : $_GET['token'];
  $check_token = variable_get('virgin_api_access_token');

  if ($token && $token == $check_token) {
    return TRUE;
  }

  return FALSE;
}
