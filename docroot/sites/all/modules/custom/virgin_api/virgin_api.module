<?php

/**
 * @file
 * Code for the Virgin API feature.
 */

include_once 'virgin_api.features.inc';

/**
 * The name of the variable that stores the Virgin API access token
 */
define('VIRGIN_API_VAR_ACCESS_TOKEN', 'virgin_api_access_token');

/**
 * Implements hook_services_resources().
 */
function virgin_api_services_resources() {
  $resources = array();

  $resources['virgin'] = array(
    'actions' => array(
      'mail-update' => array(
        'file' => array(
          'type' => 'inc',
          'module' => 'virgin_api',
          'name' => 'resources/virgin_resource'
        ),
        'callback' => '_virgin_api_virgin_mail_update_action',
        'access callback' => 'virgin_api_token_access',
        'args' => array(
          array(
            'name' => 'id',
            'type' => 'string',
            'description' => 'The id of sugar crm contact',
            'source' => array('path' => '1'),
            'optional' => FALSE,
          ),
        ),
      ),
      'checkout-finished' => array(
        'file' => array(
          'type' => 'inc',
          'module' => 'virgin_api',
          'name' => 'resources/virgin_resource'
        ),
        'callback' => '_virgin_api_virgin_checkout_finished_action',
        'access callback' => 'virgin_api_token_access',
        'args' => array(
          array(
            'name' => 'external_id',
            'type' => 'string',
            'description' => 'The id of sugar crm contact',
            'source' => 'data',
            'optional' => FALSE,
          ),
          array(
            'name' => 'regos',
            'type' => 'array',
            'description' => 'The id of sugar crm contact',
            'source' => 'data',
            'optional' => FALSE,
          ),
        ),
      )
    ),
  );

  return $resources;
}

// Helpers
// -----------------------------------------------------------------------------

/**
 * Token access callback
 *
 * Validates if the request carries a valid access token.
 *
 * @return bool
 *  TRUE the access is valid, FALSE otherwise.
 */
function virgin_api_token_access() {
  $token = empty($_GET['token']) ? FALSE : $_GET['token'];
  $check_token = variable_get(VIRGIN_API_VAR_ACCESS_TOKEN);

  if ($token && $token == $check_token) {
    return TRUE;
  }

  return FALSE;
}
