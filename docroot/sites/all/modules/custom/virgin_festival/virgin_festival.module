<?php
/**
 * @file
 * Code for the Virgin Festival feature.
 */

include_once 'virgin_festival.features.inc';

/**
 * Implements hook_menu().
 */
function virgin_festival_menu() {
  $items = array();

  $items['node/%node/tickets'] = array(
    'title' => 'Tickets',
    'page callback' => 'virgin_festival_page_tickets',
    'page arguments' => array(1),
    'access callback' => 'node_access',
    'access arguments' => array('view', 1),
    'type' => MENU_CALLBACK,
    'file' => 'virgin_festival.pages.inc'
  );

  return $items;
}

/**
 * Implements hook_theme().
 */
function virgin_festival_theme($existing, $type, $theme, $path) {
  return array(
    'virgin_festival__tickets' => array(
      'template' => 'virgin_festival__tickets',
      'variables' => array(
        'iframe_url' => '',
        'header' => '',
        'subnav' => '',
      )
    )
  );
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function virgin_festival_form_festival_node_form_alter(&$form, &$form_state) {
  // As this field will be handled by the system remove it from ui form
  $form['field_festival_state']['#access'] = FALSE;
}

/**
 * Implements hook_virgin_sync_handlers().
 */
function virgin_festival_virgin_sync_handlers() {
  return array(
    new VirginFestivalSyncHandler()
  );
}

/**
 * Implements hook_pathauto_alias_alter().
 */
function virgin_festival_pathauto_alias_alter(&$alias, array &$context) {

  // If the alias isn't for a node of type event, bailout now.
  if ($context['module'] != 'node' || $context['type'] != 'festival') {
    return;
  }

  $g_festival = new VirginEntityGrapher('node', $context['data']['node']);
  $festival_timestamp = $g_festival->relation('field_festival_state')->fieldGetOne('field_start_date');
  $year = format_date($festival_timestamp, 'custom', 'Y');

  // Finally, build the page path using the festival title and the
  // page title.
  $parts = array(
    'event',
    $g_festival->fieldGetOne('title_field') . '-' . $year
  );

  foreach ($parts as $key => $part) {
    $parts[$key] = pathauto_cleanstring($part);
  }

  $alias = pathauto_clean_alias(implode('/', $parts));

  // Create the alias for all other machine handled sub-festival pages
  $sub_paths = array(
    'replay',
    'results',
    'tickets'
  );

  foreach ($sub_paths as $sub_path) {
    $path = array(
      'source' => $context['source'] . '/' . $sub_path,
      'alias' => $alias . '/' . $sub_path
    );

    path_save($path);
  }
}
